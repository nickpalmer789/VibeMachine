"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
function getCoordinates(e) {
    if (e instanceof TouchEvent) {
        var _a = __read(e.touches, 1), touch = _a[0];
        return {
            x: touch.clientX,
            y: touch.clientY,
        };
    }
    return {
        x: e.clientX,
        y: e.clientY,
    };
}
exports.getCoordinates = getCoordinates;
function getValues(position, props, rect) {
    var axis = props.axis, xMax = props.xMax, xMin = props.xMin, xStep = props.xStep, yMax = props.yMax, yMin = props.yMin, yStep = props.yStep;
    var height = rect.height, width = rect.width;
    var x = position.x, y = position.y;
    var dx = 0;
    var dy = 0;
    if (x < 0) {
        x = 0;
    }
    if (x > width) {
        x = width;
    }
    if (y < 0) {
        y = 0;
    }
    if (y > height) {
        y = height;
    }
    if (axis === 'x' || axis === 'xy') {
        dx = Math.round((x / width) * (xMax - xMin));
    }
    if (axis === 'y' || axis === 'xy') {
        dy = Math.round((y / height) * (yMax - yMin));
    }
    return {
        x: round(dx, xStep),
        y: round(dy, yStep),
    };
}
exports.getValues = getValues;
function round(value, increment) {
    return Math.ceil(value / increment) * increment;
}
exports.round = round;
